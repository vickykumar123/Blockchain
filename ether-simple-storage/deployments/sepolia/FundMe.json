{
  "address": "0x6314b8614a589e8e1F6c2757885cbcbADC7bd21E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xec69dc91b7199c90ed93f23d9118a494e745f9eec0d6f627949b148e7a9318a8",
  "receipt": {
    "to": null,
    "from": "0x5B6ed962D67585BB20F855D6c43EC88101649F1A",
    "contractAddress": "0x6314b8614a589e8e1F6c2757885cbcbADC7bd21E",
    "transactionIndex": 94,
    "gasUsed": "421646",
    "logsBloom": "0x
    "blockHash": "0x19ce9b3fc8d5b9cc943420a375cae9b2fe864b8aa78ad5d6e8865a3b9f2657ab",
    "transactionHash": "0xec69dc91b7199c90ed93f23d9118a494e745f9eec0d6f627949b148e7a9318a8",
    "logs": [],
    "blockNumber": 8946344,
    "cumulativeGasUsed": "11937725",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "455cf55a83041361b48e6c507da861fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\r\\n// Withdraw funds\\r\\n// Set a minimum funding value in USD\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConvertor for uint256;\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n    uint256 public constant minimumUSD = 50 * 1e18; // 50 USD\\r\\n\\r\\n    address immutable owner;\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        // Want to be able to set a minimu fund amount in USD\\r\\n        // 1. How do we send ETH to this contract?\\r\\n\\r\\n        require(\\r\\n            msg.value.getConversionRate(priceFeed) >= minimumUSD,\\r\\n            \\\"Didn't send enough\\\"\\r\\n        ); // Should send more than or equal 1 ether\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        // reset the array\\r\\n        funders = new address[](0);\\r\\n\\r\\n        // Ways to send ETH\\r\\n        // 1. transfer\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // 2. send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n        // 3. call\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Sender is not owner\\\");\\r\\n        _; // do the rest of the code\\r\\n    }\\r\\n\\r\\n    // what happens if someone sends the contract ETH without calling the fund function\\r\\n    // we have receive and fallback function\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdb16d5995a6ccb12073a18f8a512e04bb093443b89518bb418bf07930523d967\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConvertor {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // ABI\\r\\n        // Address 0x694AA1769357215DE4FAC081bf1f309aDC325306 (get from the chainlink price feed)\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        // );\\r\\n        (, int price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n        // return uint256(5 * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 price = getPrice(priceFeed);\\r\\n        uint256 ethToUsd = (price * ethAmount) / 1e18;\\r\\n        return ethToUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x91433e1a0072f9bb0488bf4dfef7a68452e59239c6121f73e4cbc854f353fea8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052348015600f57600080fd5b506040516106d73803806106d7833981016040819052602c916054565b33608052600280546001600160a01b0319166001600160a01b03929092169190911790556082565b600060208284031215606557600080fd5b81516001600160a01b0381168114607b57600080fd5b9392505050565b60805161063a61009d60003960006101ff015261063a6000f3fe6080604052600436106100595760003560e01c80633430a88c146100705780633ccfd60b146100a05780633e47d6f3146100b5578063741bef1a146100e2578063b60d428814610068578063dc0d3dff1461011a57610068565b366100685761006661013a565b005b61006661013a565b34801561007c57600080fd5b5061008d6802b5e3af16b188000081565b6040519081526020015b60405180910390f35b3480156100ac57600080fd5b506100666101f4565b3480156100c157600080fd5b5061008d6100d03660046104bc565b60016020526000908152604090205481565b3480156100ee57600080fd5b50600254610102906001600160a01b031681565b6040516001600160a01b039091168152602001610097565b34801561012657600080fd5b506101026101353660046104e5565b61035d565b6002546802b5e3af16b18800009061015c9034906001600160a01b0316610387565b10156101a45760405162461bcd60e51b8152602060048201526012602482015271088d2c8dc4ee840e6cadcc840cadcdeeaced60731b60448201526064015b60405180910390fd5b60008054600181810183557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910180546001600160a01b03191633908117909155825260205260409020349055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102625760405162461bcd60e51b815260206004820152601360248201527229b2b73232b91034b9903737ba1037bbb732b960691b604482015260640161019b565b60005b6000548110156102b5576000808281548110610283576102836104fe565b60009182526020808320909101546001600160a01b031682526001908190526040822091909155919091019050610265565b50604080516000808252602082019283905290516102d39290610442565b50604051600090339047908381818185875af1925050503d8060008114610316576040519150601f19603f3d011682016040523d82523d6000602084013e61031b565b606091505b505090508061035a5760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b604482015260640161019b565b50565b6000818154811061036d57600080fd5b6000918252602090912001546001600160a01b0316905081565b600080610393836103bf565b90506000670de0b6b3a76400006103aa868461052a565b6103b49190610541565b925050505b92915050565b600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104249190610582565b505050915050806402540be40061043b91906105d4565b9392505050565b828054828255906000526020600020908101928215610497579160200282015b8281111561049757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610462565b506104a39291506104a7565b5090565b5b808211156104a357600081556001016104a8565b6000602082840312156104ce57600080fd5b81356001600160a01b038116811461043b57600080fd5b6000602082840312156104f757600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103b9576103b9610514565b60008261055e57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff8116811461057d57600080fd5b919050565b600080600080600060a0868803121561059a57600080fd5b6105a386610563565b602087015160408801516060890151929750909550935091506105c860808701610563565b90509295509295909350565b80820260008212600160ff1b841416156105f0576105f0610514565b81810583148215176103b9576103b961051456fea264697066735822122024ddf78a65edb7ab5558e44884d010aeeb284c03f33676232412668ec202df5d64736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80633430a88c146100705780633ccfd60b146100a05780633e47d6f3146100b5578063741bef1a146100e2578063b60d428814610068578063dc0d3dff1461011a57610068565b366100685761006661013a565b005b61006661013a565b34801561007c57600080fd5b5061008d6802b5e3af16b188000081565b6040519081526020015b60405180910390f35b3480156100ac57600080fd5b506100666101f4565b3480156100c157600080fd5b5061008d6100d03660046104bc565b60016020526000908152604090205481565b3480156100ee57600080fd5b50600254610102906001600160a01b031681565b6040516001600160a01b039091168152602001610097565b34801561012657600080fd5b506101026101353660046104e5565b61035d565b6002546802b5e3af16b18800009061015c9034906001600160a01b0316610387565b10156101a45760405162461bcd60e51b8152602060048201526012602482015271088d2c8dc4ee840e6cadcc840cadcdeeaced60731b60448201526064015b60405180910390fd5b60008054600181810183557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910180546001600160a01b03191633908117909155825260205260409020349055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102625760405162461bcd60e51b815260206004820152601360248201527229b2b73232b91034b9903737ba1037bbb732b960691b604482015260640161019b565b60005b6000548110156102b5576000808281548110610283576102836104fe565b60009182526020808320909101546001600160a01b031682526001908190526040822091909155919091019050610265565b50604080516000808252602082019283905290516102d39290610442565b50604051600090339047908381818185875af1925050503d8060008114610316576040519150601f19603f3d011682016040523d82523d6000602084013e61031b565b606091505b505090508061035a5760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b604482015260640161019b565b50565b6000818154811061036d57600080fd5b6000918252602090912001546001600160a01b0316905081565b600080610393836103bf565b90506000670de0b6b3a76400006103aa868461052a565b6103b49190610541565b925050505b92915050565b600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104249190610582565b505050915050806402540be40061043b91906105d4565b9392505050565b828054828255906000526020600020908101928215610497579160200282015b8281111561049757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610462565b506104a39291506104a7565b5090565b5b808211156104a357600081556001016104a8565b6000602082840312156104ce57600080fd5b81356001600160a01b038116811461043b57600080fd5b6000602082840312156104f757600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103b9576103b9610514565b60008261055e57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff8116811461057d57600080fd5b919050565b600080600080600060a0868803121561059a57600080fd5b6105a386610563565b602087015160408801516060890151929750909550935091506105c860808701610563565b90509295509295909350565b80820260008212600160ff1b841416156105f0576105f0610514565b81810583148215176103b9576103b961051456fea264697066735822122024ddf78a65edb7ab5558e44884d010aeeb284c03f33676232412668ec202df5d64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 360,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 364,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 374,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)104"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)104": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}